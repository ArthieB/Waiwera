---

# - name: get the username running the deploy
#   local_action: command whoami
#   register: username_on_the_host

# - debug: var=username_on_the_host

# - name: remove previous petsc install
#   file:
#     dest: "{{ petsc_path }}"
#     state: absent

- name: petsc - Fetch from petsc from repository
  git:
    repo: "{{ petsc_repo }}"
    dest: "{{ petsc_path }}"
    version: "{{ petsc_version }}"
    update: yes
    force: yes
  register: petsc_git
  tags:
    - fetch

- name: Build
  block:
    - name: configure
      block:
      - set_fact:
          configure_cmd: "{{ './configure --'  + petsc_options | join(' --') }}"

      - set_fact:
          configure_cmd: "{{ configure_cmd + petsc_variables | join(' ') }}"
        when: petsc_arch == 'release'
        # tags:
        #   - never
        #   - nesi

      - name: configure PETSc
        command: "{{ configure_cmd }}"
        args:
          chdir: "{{ petsc_path }}"
      tags:
        - configure
        - build

    - name: Make PETSc
      block:
      - name: make all
        make:
          target: all
          chdir: "{{ petsc_path }}"

      - name: make check
        make:
          target: check
          chdir: "{{ petsc_path }}"

      - name: make test
        make:
          target: test
          chdir: "{{ petsc_path }}"
      tags:
        - make
        - build

    - name: petsc - copy to pkgconfig
      copy:
        src: "{{ petsc_path + '/' + petsc_arch +  '/lib/pkgconfig'}}"
        dest: "{{ lib_path }}/"
        remote_src: yes
  when: ((petsc_git.changed == true) or (petsc_force == 'true'))
