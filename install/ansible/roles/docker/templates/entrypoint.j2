#!/bin/bash
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# echo commands to the terminal output
# set -ex

# load custom paths
# source /home/waiwera/.profile
# echo "entrypoint.sh started"
# echo $entry

export PETSC_DIR={{ petsc_path }}
export PETSC_ARCH={{ petsc_arch }}
export PATH=$PATH:$HOME/bin
export PATH=$PATH:$HOME/.local/bin
export PATH=$PATH:{{ bin_path }}
export PATH=$PATH:{{ petsc_bin }}
export PKG_CONFIG_PATH={{ pkgconfig_path }}:$PKG_CONFIG_PATH
# export LD_LIBRARY_PATH={{ lib_path }}:{{ petsc_lib }}
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LC_TYPE=en_US.UTF-8

# In Prod, this may be configured with a GID already matching the container
# allowing the container to be run directly as Jenkins. In Dev, or on unknown
# environments, run the container as root to automatically correct docker
# group in container to match the docker.sock GID mounted from the host.
if [ "$(id -u)" = "0" ]; then
  # get gid of docker socket file
  CHECK_GID=`ls -n /data/uidcheck.txt | cut -f4 -d' '`
  CHECK_UID=`ls -n /data/uidcheck.txt | cut -f3 -d' '`

  # get group of docker inside container
  CUR_GID=`getent group waiwera | cut -f3 -d: || true`
  CUR_UID=`id -u waiwera`

  # if they don't match, adjust
  if [ ! -z "$CHECK_GID" -a "$CHECK_GID" != "$CUR_GID" ]; then
    groupmod -g ${CHECK_GID} -o waiwera
  fi
  if [ ! -z "$CHECK_UID" -a "$CHECK_UID" != "$CUR_UID" ]; then
    usermod -u ${CHECK_UID} -o waiwera
  fi
  if ! groups waiwera | grep -q waiwera; then
    usermod -aG waiwera waiwera
  fi
  chown -R waiwera:waiwera /opt
  # Add call to gosu to drop from root user to jenkins user
  # when running original entrypoint
  set -- gosu waiwera "$@"

fi

set -x

# Execute the container CMD under tini for better hygiene
exec "$@"

