# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"
Vagrant.require_version ">= 2.2.4"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "bento/centos-7"
  config.vm.synced_folder ".", "/vagrant/"
  config.vm.define :waiwera, primary: true do |waiwera|
    waiwera.vm.provision :file, source: "../../ansible", destination: "/tmp/ansible"
    waiwera.vm.provision :shell, inline: "cp -r /tmp/ansible /"
    waiwera.vm.provision :shell, inline: 'yum --enablerepo=extras install -y epel-release'
    waiwera.vm.provision :shell, inline: "yum install python-pip -y && pip install -U ansible"
    waiwera.vm.provision "ansible_local" do |ansible|
      # ansible.limit = 'waiwera'
      ansible.verbose = "vvv"
      ansible.playbook = "/ansible/site.yml"
      ansible.raw_arguments = [
        '--skip-tags=docker,clean,app',
      ]
    end
    waiwera.vm.provision "ansible_local" do |ansible|
      # ansible.limit = 'waiwera'
      ansible.verbose = "vvv"
      ansible.playbook = "/ansible/site.yml"
      ansible.raw_arguments = [
        '-e "waiwera_user=' + ENV['GIT_USER'] + '"',
        '-e "waiwera_pwd='+ ENV['GIT_PWD'] +'"',
        '-e "app_user=vagrant"',
        '-e "app_group=vagrant"',
        '--skip-tags=docker,clean,setup',
      ]
    end
    waiwera.vm.provision :shell, inline: "sh /etc/profile.d/opt_paths.sh; cd /opt/app/waiwera; python unit_tests.py", privileged: false
    waiwera.vm.hostname = "waiwera-centos"
  end
  config.vm.provider :virtualbox do |v|
#    v.gui = true
    v.memory = 4096
  end
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end
end
