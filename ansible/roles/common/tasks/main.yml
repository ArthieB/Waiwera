---
- name: Setup secrets
  include_vars: secrets.yml
  tags:
    - packer

- name: Set docker_status
  set_fact:
    docker_run: True
  tags:
    - docker
    - never

- name: create user and group
  block:
  - user:
      name: "{{ app_user }}"
      shell: /bin/bash
      uid: 1000
      comment: waiwera app user
  - group:
      name: "{{ app_group }}"
      # shell: /bin/bash
      gid: 1000
      # comment: waiwera app user
  when: docker_run is defined

# - name: Get default Variables
#   include_vars: "../vars/default.yml"

- name: Get Variables
  include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version | int}}.yml"
    - "../vars/{{ ansible_distribution }}.yml"
    - "../vars/{{ ansible_os_family }}.yml"
    - "../vars/default.yml"

- name: Get Nesi variables
  include_vars: nesi.yml
  tags:
    - never
    - nesi

- name: Set 1st layer path variables
  set_fact:
    waiwera_path: "{{ base_dir }}/waiwera"
    bin_path: "{{ base_dir }}/bin"
    lib_path: "{{ base_dir }}/lib"
    include_path: "{{ base_dir }}/include"
    software_path: "{{ base_dir }}/software"

- name: Set 2nd layer path variables
  set_fact:
    pkgconfig_path: "{{ lib_path }}/pkgconfig"
    petsc_path: "{{ software_path }}/PETSc"

- name: openmpi - test for pre-existing install
  command: mpiexec --version
  register: openmpi_test
  ignore_errors: True

- name: Setup packages
  include: packages.yml
  become: yes
  tags:
    - packages

- name: set opt_paths.sh with template
  template:
    src: opt_paths.j2
    dest: /etc/profile.d/opt_paths.sh
  tags:
    - never
    - root
    - docker
  become: yes

- name: Run the common tasks to setup waiwera on a system with no root access
  include: setup.yml
  become: no

- name: meson - Install
  include: meson.yml
  become: no
  tags:
    - meson

- name: ninja - Install
  include: ninja.yml
  become: no
  tags:
    - ninja

- name: zofu - Install from source
  include: zofu.yml
  become: no
  tags:
    - never
    - zofu

- name: fson - Install from source
  include: fson.yml
  become: no
  tags:
    - never
    - fson

- name: petsc - Install
  include: petsc.yml
  environment:
    PETSC_DIR: "{{ petsc_path }}"
    PETSC_ARCH: "{{ petsc_arch }}"
    PATH: "{{ ansible_env.PATH }}:{{ bin_path }}:{{ ansible_env.HOME }}/.local/bin"
    PKG_CONFIG_PATH: "{{ pkgconfig_path }}"
    LANG: en_US.UTF-8
    LC_ALL: en_US.UTF-8
    LC_TYPE: en_US.UTF-8
  tags:
    - petsc

- name: waiwera - Setup
  environment:
    PETSC_DIR: "{{ petsc_path }}"
    PETSC_ARCH: "{{ petsc_arch }}"
    PATH: "{{ ansible_env.PATH }}:{{ bin_path }}:{{ ansible_env.HOME }}/.local/bin"
    PKG_CONFIG_PATH: "{{ pkgconfig_path }}"
    LANG: en_US.UTF-8
    LC_ALL: en_US.UTF-8
    LC_TYPE: en_US.UTF-8
  include: waiwera.yml
  tags:
    - waiwera

- name: Cleanup
  include: cleanup.yml
  tags:
    - docker
    - cleanup

- name: change app deployment ownership
  file:
    dest: "{{ waiwera_path }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    recurse: yes
  tags:
    - never
    - docker
    - root

- name: change /usr/local deployment ownership
  file:
    dest: /usr/local
    owner: root
    group: root
    recurse: yes
  tags:
    - never
    - docker
    - root
